exit
Need.first
exit
exi
need1.status_id
need1.status
exit
params
exit
need1.status
exit
need1.status
exit
need1.status
exit
need1.status
exit
need1.status
exit
need1.status
exit
need1.status_id
exit
Need.suspended
Need.inactive
Need.active
need1.status
Status.first
status.first
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
next
params
next
params
exit
exi
params
continue
params
continue
params
exit
params
Charity.find_by(slug: params[:charity_slug]) || nil
params
charity_id
current_id
current_user.charities
current_user.charities.exists?(id: charity_id)
user.charities.exists?(id: charity_id)
next
params
authorized?
continue
authorized?
params
continue
next
params
exit
business_admin_permissions
next
continue
business_admin_permissions
user.business_admin?
next
params
next
continue
next
exit
controller
controller == "admin/charity/needs"
controller == "admin/charity/needs" && action == "edit"
current_user.charities.exists?(slug: params[:charity_slug])
current_user
exit
current_user.roles.includes("platform_admin")
current_user.roles.include?("platform_admin")
current_user.roles.includes?("platform_admin")
current_user.roles.include?("platform_admin")
current_user.roles.exists?("platform_admin")
current_user.roles
continue
current_user.roles
continue
current_user.roles
exit
next
current_user.roles
exit
Status.create(name: "active")
Status.create(name: "Active")
status
need1
next
Status.create(name: "active")
Status.all.count
role
user_role
user
status
exit
@need
exit
@need
exit
@status_options
exit
next
exit
@need = Need.find(params[:id])
params
exit
user.roles.exists?(name: "platform_admin")
user.roles.exists?("platform_admin")
user.roles
continue
user.roles
exit
Status.where(name:["active","inactive"]).count
Status.where(name:["active","inactive"])
active
continue
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
continue
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
continue
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
continue
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
continue
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
continue
next
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
exit
charity_id = Charity.find_by(slug: params[:charity_slug]).id || nil
exit
Charity.find_by(slug: params[:charity_slug]).id || nil
Charity.find_by(slug: params[:charity_slug]).id 
params
exit
Charity.find_by(slug: params[:charity_slug]).id
params
exit
params
exit
params
exit
user.roles.first
user = current_user
current_permission
current_permission.allow?
next
roles.exists?(name: "business_admin")
exit
need_categories
exit
next
recipient_id
exit
recipient_ids
recipient_id
need_category.recipients
exit
NeedsCategory.find_by(slug: params[:needs_category_slug])
NeedsCategory.find_by(slug: "needs-category-1")
NeedsCategory.first.slug == params[:needs_categories_slug]
NeedsCategory.first.slug
NeedsCategory.first
params[:needs_category_slug]
NeedsCategory.find_by(slug: params[:needs_categories_slug])
NeedsCategory.all
params
@needs_category
exit
params
exit
need_category
exit
need_item.need.needs_category.slug
need_item.need.needs_category
need_item.need.category
need_item.need
need_item.needs
need_item.need_items
need_item.slug
need_item
exit
@needs_categories
@needs-categories
exit
@needs_categories
exit
NeedsCategory.all
exit
need_item.need.needs_category
need_item.need
need_item
exit
@charity
params
exit
params
params[:charity_slug]
@charity
exit
Charity.first
params[:charity]
@charity
params
exit
Charity.all
@charity
params
exit
charity_path(recipient_one.charity)
charities_path
charities_path(recipient_one.charity.id)
charities_path(recipient_one)
charities_path(recipient_one.charity)
recipient_one.charity
current_path
exit
current_path
exit
next
@recipient.need_items
@recipient
next
@recipient
@charity
next
exit
params
